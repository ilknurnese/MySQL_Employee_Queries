



-- The database schema in the image illustrates different tables and the relationships between them in an employee database. Below is a written explanation of each table and its contents:

-- 1. employees
-- emp_no (INT) – Employee number (Primary key)
-- birth_date (DATE) – Date of birth
-- first_name (VARCHAR) – Employee's first name
-- last_name (VARCHAR) – Employee's last name
-- gender (ENUM) – Gender ('M' or 'F')
-- hire_date (DATE) – Date of hire

-- 2. departments
-- dept_no (CHAR) – Department number (Primary key)
-- dept_name (VARCHAR) – Department name

-- 3. dept_emp (Employee-Department Relationship)
-- emp_no (INT) – Employee number (Primary key, linked to the 'employees' table)
-- dept_no (CHAR) – Department number (Primary key, linked to the 'departments' table)
-- from_date (DATE) – Start date
-- to_date (DATE) – End date

-- 4. dept_manager (Department Managers)
-- dept_no (CHAR) – Department number (Primary key, linked to the 'departments' table)
-- emp_no (INT) – Employee number (Primary key, linked to the 'employees' table)
-- from_date (DATE) – Start date of the manager role
-- to_date (DATE) – End date of the manager role

-- 5. salaries
-- emp_no (INT) – Employee number (Primary key, linked to the 'employees' table)
-- salary (INT) – Salary amount
-- from_date (DATE) – Start date of the salary
-- to_date (DATE) – End date of the salary

-- 6. titles
-- emp_no (INT) – Employee number (Primary key, linked to the 'employees' table)
-- title (VARCHAR) – Employee’s job title
-- from_date (DATE) – Start date of the title
-- to_date (DATE) – End date of the title


-- 1. Çalışanlar (employees): [1000 adet Çalışan]
-- SELECT * FROM `employees`.`employees`;
-- emp_no: Her çalışanı benzersiz şekilde tanımlayan bir tamsayı.
-- birth_date: Çalışanın doğum tarihi.
-- first_name: Çalışanın ilk adı.
-- last_name: Çalışanın soyadı.
-- gender: Çalışanın cinsiyeti (erkek veya kadın).
-- hire_date: Çalışanın işe alındığı tarih.

-- emp_no 	birth_date 	first_name 	last_name 	gender 	hire_date
-- 10001 	1953-09-02  Georgi 		Facello 	M 	 	1986-06-26
-- 10002 	1964-06-02  Bezalel 	Simmel 		F 	 	1985-11-21
-- 10003 	1959-12-03  Parto 		Bamford 	M    	1986-08-28
-- 10004 	1954-05-01  Christian 	Koblick 	M 		1986-12-01
-- … … … … … …
-- 10998 	1956-02-17 	Marlo 		Kandlur 	M 		1992-06-28
-- 10999 1961-12-04 Insup Benveniste F 1996-03-05
-- 11000 1960-09-12 Alain Bonifati M 1988-08-20

-- ____________________________________________________________
-- 2. Departmanlar (departments): [Dokuz adet Departman]
-- SELECT * FROM `employees`.`departments`;
-- ● dept_no: Her departmanı benzersiz şekilde tanımlayan bir karakter dizisi.
-- ● dept_name: Departmanın adı.

-- dept_no 	dept_name
-- d009 	Customer Service
-- d005 	Development
-- d002 	Finance
-- d003 	Human Resources
-- d007 	Sales
-- d001 	New Department Name
-- d004 	Production
-- d006 	Quality Management
-- d008 	Research

-- ________________________________________________

-- 3. Departman Yöneticileri (dept_manager):

-- SELECT * FROM `employees`.`dept_manager`;
-- ● dept_no: Yöneticinin yönettiği departmanın numarası.
-- ● emp_no: Departman yöneticisinin çalışan numarası.

-- emp_no 	dept_no 	from_date 	to_date
-- 110022 	d001 		1985-01-01 	1991-10-01
-- 110039 	d001 		1991-10-01 	9999-01-01
-- 110085 	d002 		1985-01-01 	1989-12-17
-- 110114 	d002 		1989-12-17 	9999-01-01
-- 110183 	d003 		1985-01-01 	1992-03-21
-- 110228 	d003 		1992-03-21 	9999-01-01
-- 110303 	d004 		1985-01-01 	1988-09-09
-- 110344 	d004 		1988-09-09 	1992-08-02
-- 110386 	d004 		1992-08-02 	1996-08-30
-- 110420 	d004 		1996-08-30 	9999-01-01

-- _________________________________________________________________ 
 
--  4. Maaşlar (salaries):
-- SELECT * FROM `employees`.`salaries`;
-- ● emp_no: Maaşı alan çalışanın numarası.
-- ● salary: Çalışanın maaşı.
-- ● from_date: Maaşın geçerli olduğu başlangıç tarihi.
-- ● to_date: Maaşın geçerli olduğu bitiş tarihi.

-- emp_no 	salary 	from_date 	to_date
-- 10099 	95842 	2000-10-15 	2001-10-15
-- 10099 	98538 	2001-10-15 	9999-01-01
-- 10100 	54398 	1987-09-21 	1988-09-20
-- 10100 	55586 	1988-09-20 	1989-09-20

-- _________________________________________________________________________________________________________

use employees;

SELECT * FROM employees.departments;
SELECT * FROM employees.dept_emp;
SELECT * FROM employees.dept_manager;
SELECT * FROM employees.employees;
SELECT * FROM employees.salaries;
select * FROM employees.titles;


-- 1. List all employees in department D001.
-- D001 departmanındaki tüm çalışanları listele.

SELECT 
    employees.emp_no,
    employees.first_name,
    employees.last_name,
    dept_emp.dept_no
FROM
    employees
        JOIN
    dept_emp ON employees.emp_no = dept_emp.emp_no
WHERE
    dept_emp.dept_no = 'd001';

-- 2,7,12
-- 2. List all employees in 'Human Resources' department.
-- 'İnsan Kaynakları' departmanındaki tüm çalışanları listele.

SELECT 
    employees.emp_no,
    employees.first_name,
    employees.last_name,
    departments.dept_name
FROM
    employees
        JOIN
    dept_emp ON employees.emp_no = dept_emp.emp_no
        JOIN
    departments ON dept_emp.dept_no = departments.dept_no
WHERE
    departments.dept_name = 'Human Resources';

-- 3. Calculate the average salary of all employees
-- Tüm çalışanların ortalama maaşını hesapla.

SELECT 
    AVG(salaries.salary)
FROM
    salaries
        JOIN
    employees ON salaries.emp_no = employees.emp_no;


-- 4. Calculate the average salary of all employees with gender "M"
-- - "Erkek" cinsiyetindeki tüm çalışanların ortalama maaşını hesapla.

SELECT 
    AVG(salaries.salary) AS Ortalama_Maas
FROM
    employees
        JOIN
    salaries ON employees.emp_no = salaries.emp_no
WHERE
    gender = 'M';

-- 5. Calculate the average salary of all employees with gender "F"
-- "Kadın" cinsiyetindeki tüm çalışanların ortalama maaşını hesapla

SELECT 
    AVG(salaries.salary) AS Ortalama_Maas
FROM
    employees
        JOIN
    salaries ON employees.emp_no = salaries.emp_no
WHERE
    gender = 'f';

-- 6. List all employees in the "Sales" department with a salary greater than 70,000.
-- Maaşı 70.000'den yüksek olan "Satış" departmanındaki tüm çalışanları listele.

SELECT 
    employees.emp_no,
    employees.first_name,
    employees.last_name,
    salaries.salary
FROM
    employees
        JOIN
    salaries ON employees.emp_no = salaries.emp_no
        JOIN
    dept_emp ON employees.emp_no = dept_emp.emp_no
        JOIN
    departments ON dept_emp.dept_no = departments.dept_no
WHERE
    departments.dept_name = 'Sales'
        AND salaries.salary > 70000;

-- 7. This query retrieves employees who have salaries between 50000 and 100000.
-- Bu sorgu, maaşı 50.000 ile 100.000 arasında olan çalışanları getirir.

SELECT 
    employees.emp_no,
    employees.first_name,
    employees.last_name,
    salaries.salary
FROM
    employees
        JOIN
    salaries ON employees.emp_no = salaries.emp_no
WHERE
    salary > '50000' AND salary < '100000';




-- 8. Calculate the average salary for each department (by department number or department name)
-- - Her departmanın ortalama maaşını hesapla (departman numarasına veya departman adına göre).

SELECT 
    departments.dept_no,
    departments.dept_name,
    AVG(salaries.salary) AS average_salary
FROM
    departments
        JOIN
    dept_emp ON departments.dept_no = dept_emp.dept_no
        JOIN
    salaries ON dept_emp.emp_no = salaries.emp_no
GROUP BY departments.dept_no , departments.dept_name;

-- 9. Calculate the average salary for each department, including department names
-- - Departman adlarını da içeren her departmanın ortalama maaşını hesapla.

SELECT 
    d.dept_name, AVG(s.salary) AS average_salary
FROM
    departments d
        JOIN
    dept_emp de ON d.dept_no = de.dept_no
        JOIN
    salaries s ON de.emp_no = s.emp_no
GROUP BY d.dept_name;

-- 10. Find all salary changes for employee with emp. no '10102'
-- - '10102' iş numarasına sahip çalışanın tüm maaş değişikliklerini bul.

SELECT 
    s.emp_no, s.salary, s.from_date, s.to_date
FROM
    salaries s
WHERE
    s.emp_no = 10102
ORDER BY s.from_date;


-- 11. Find the salary increases for employee with employee number '10102' (using the to_date column
-- in salaries)
-- - Maaş numarası '10102' olan çalışanın maaş artışlarını bul ('to_date' sütununu kullanarak).

SELECT 
    s1.emp_no,
    s1.salary AS previous_salary,
    s2.salary AS new_salary,
    s1.to_date AS change_date
FROM
    salaries s1
        JOIN
    salaries s2 ON s1.emp_no = s2.emp_no
        AND s1.to_date = s2.from_date
WHERE
    s1.emp_no = 10102
        AND s2.salary > s1.salary
ORDER BY s1.to_date;

-- 12. Find the employee with the highest salary
-- - En yüksek maaşa sahip çalışanı bul.

SELECT 
    employees.emp_no,
    employees.first_name,
    employees.last_name,
    salaries.salary
FROM
    employees
        JOIN
    salaries ON salaries.emp_no = employees.emp_no
WHERE
    salaries.salary = (SELECT 
            MAX(salary)
        FROM
            salaries); 

-- 2.YOL
SELECT 
    e.emp_no, e.first_name, e.last_name, s.salary
FROM
    employees e
        JOIN
    salaries s ON e.emp_no = s.emp_no
ORDER BY s.salary DESC
LIMIT 1;

-- 3. YOL

SELECT emp_no, first_name, last_name, salary
FROM (
    SELECT e.emp_no, e.first_name, e.last_name, s.salary,
           RANK() OVER (ORDER BY s.salary DESC) AS salary_rank
    FROM employees e
    JOIN salaries s ON e.emp_no = s.emp_no
) ranked_salaries
WHERE salary_rank = 1;

-- Açıklama:
-- RANK() OVER (ORDER BY s.salary DESC): Maaşları azalan sırada sıralayarak her satıra bir sıra numarası verir. 
-- Aynı maaşa sahip çalışanlar aynı sıra numarasını alır.
-- Alt sorgu (ranked_salaries): RANK() fonksiyonu ile her çalışanın maaş sırasını içeren bir geçici tablo oluşturur.
-- WHERE salary_rank = 1: En yüksek maaş sırasına (salary_rank = 1) sahip çalışanları filtreler. 



-- 4. YOL 

SELECT 
    e.emp_no, e.first_name, e.last_name, s.salary
FROM
    employees e
        JOIN
    salaries s ON e.emp_no = s.emp_no
GROUP BY e.emp_no , e.first_name , e.last_name , s.salary
HAVING s.salary = MAX(s.salary);

-- Açıklama:
-- GROUP BY: Her çalışanın benzersiz kaydını gruplar. Bu durumda, GROUP BY her çalışanın bireysel kaydını alır.
-- HAVING s.salary = MAX(s.salary): Gruplar arasında en yüksek maaşı alan kayıtları filtreler.

-- 5. YOL 

SELECT DISTINCT
    e.emp_no, e.first_name, e.last_name, s.salary
FROM
    employees e
        JOIN
    salaries s ON e.emp_no = s.emp_no
WHERE
    s.salary IN (SELECT 
            MAX(salary)
        FROM
            salaries);

-- Açıklama:
-- WHERE s.salary IN (SELECT MAX(salary) FROM salaries): salaries tablosundan en yüksek maaşı alan satırları filtreler.
-- DISTINCT: Aynı çalışanın maaşının birden fazla kayıtta olmasını önler.



-- 13. Find the latest salaries for each employee
-- - Her çalışanın en son maaşlarını bul.

SELECT 
    emp_no, salary
FROM
    salaries
WHERE
    (emp_no , to_date) IN (SELECT 
            emp_no, MAX(to_date)
        FROM
            salaries
        GROUP BY emp_no);

-- 14. List the first name, last name, and highest salary of employees in the "Sales" department.
-- Order the list by highest salary descending and only show the employee with the highest salary.
-- - "Satış" departmanındaki çalışanların adını, soyadını ve en yüksek maaşını listele.
-- Listeyi en yüksek maaşa göre azalan şekilde sırala ve sadece en yüksek maaşa sahip çalışanı
-- göster.

SELECT 
    e.first_name, e.last_name, MAX(s.salary) AS highest_salary
FROM
    employees e
        JOIN
    dept_emp de ON e.emp_no = de.emp_no
        JOIN
    departments d ON de.dept_no = d.dept_no
        JOIN
    salaries s ON e.emp_no = s.emp_no
WHERE
    d.dept_name = 'Sales'
GROUP BY e.emp_no , e.first_name , e.last_name
ORDER BY highest_salary DESC
LIMIT 1;


-- 15. Find the Employee with the Highest Salary Average in the Research Department
-- - Araştırma Departmanındaki Ortalama En Yüksek Maaşlı Çalışanı Bul

SELECT 
    e.first_name, e.last_name, AVG(s.salary) AS average_salary
FROM
    employees e
        JOIN
    dept_emp de ON e.emp_no = de.emp_no
        JOIN
    departments d ON de.dept_no = d.dept_no
        JOIN
    salaries s ON e.emp_no = s.emp_no
WHERE
    d.dept_name = 'Research'
GROUP BY e.emp_no , e.first_name , e.last_name
ORDER BY average_salary DESC
LIMIT 1;


-- 16. For each department, identify the employee with the highest single salary ever recorded. List the
-- department name, employee's first name, last name, and the peak salary amount. Order the results
-- by the peak salary in descending order.
-- - Her departman için, kaydedilmiş en yüksek tek maaşı belirle. Departman adını, çalışanın adını,
-- soyadını ve en yüksek maaş tutarını listele. Sonuçları en yüksek maaşa göre azalan şekilde sırala.

SELECT 
    d.dept_name,
    e.first_name,
    e.last_name,
    MAX(s.salary) AS peak_salary
FROM
    departments d
        JOIN
    dept_emp de ON d.dept_no = de.dept_no
        JOIN
    employees e ON de.emp_no = e.emp_no
        JOIN
    salaries s ON e.emp_no = s.emp_no
GROUP BY d.dept_name , e.emp_no , e.first_name , e.last_name
ORDER BY peak_salary DESC;


-- 17. Identify the employees in each department who have the highest average salary. List the
-- department name, employee's first name, last name, and the average salary. Order the results by
-- average salary in descending order, showing only those with the highest average salary within their
-- department.
-- - Her departmandaki en yüksek ortalama maaşa sahip çalışanları belirle. Departman adını,
-- çalışanın adını, soyadını ve ortalama maaşı listele. Sonuçları departmanlarına göre azalan şekilde
-- sırala, sadece kendi departmanlarında en yüksek ortalama maaşa sahip olanları göster.


SELECT 
    d.dept_name,
    e.first_name,
    e.last_name,
    AVG(s.salary) AS avg_salary
FROM
    employees e
        JOIN
    dept_emp de ON e.emp_no = de.emp_no
        JOIN
    departments d ON de.dept_no = d.dept_no
        JOIN
    salaries s ON e.emp_no = s.emp_no
GROUP BY d.dept_name , e.emp_no , e.first_name , e.last_name
ORDER BY avg_salary DESC;


-- 18. List the names, last names, and hire dates in alphabetical order of all employees hired before
-- January 01, 1990.
-- - 1990-01-01 tarihinden önce işe alınan tüm çalışanların adlarını, soyadlarını ve işe alınma
-- tarihlerini alfabetik sırayla listele.

SELECT 
    first_name, last_name, hire_date
FROM
    employees
WHERE
    hire_date < '1990-01-01'
ORDER BY first_name , last_name;

-- 19. List the names, last names, hire dates of all employees hired between January 01, 1985 and
-- December 31, 1989, sorted by hire date.
-- - 1985-01-01 ile 1989-12-31 tarihleri arasında işe alınan tüm çalışanların adlarını, soyadlarını ve işe
-- alınma tarihlerini işe alınma tarihine göre sıralı olarak listele.

SELECT 
    first_name, last_name, hire_date
FROM
    employees
WHERE
    hire_date BETWEEN '1985-01-01' AND '1989-12-31'
ORDER BY hire_date;



-- 20. List the names, last names, hire dates, and salaries of all employees in the Sales department who
-- were hired between January 01, 1985 and December 31, 1989, sorted by salary in descending order.
-- 1985-01-01 ile 1989-12-31 tarihleri arasında işe alınan Satış departmanındaki tüm çalışanların
-- adlarını, soyadlarını, işe alınma tarihlerini ve maaşlarını, maaşa göre azalan şekilde sıralı olarak
-- listele.

SELECT 
    employees.first_name,
    employees.last_name,
    employees.hire_date,
    salaries.salary
FROM
    employees
        JOIN
    dept_emp ON employees.emp_no = dept_emp.emp_no
        JOIN
    departments ON dept_emp.dept_no = departments.dept_no
        JOIN
    salaries ON employees.emp_no = salaries.emp_no
WHERE
    departments.dept_name = 'Sales'
        AND employees.hire_date BETWEEN '1985-01-01' AND '1989-12-31'
ORDER BY salaries.salary DESC;


-- 21.
-- -- a: Find the count of male employees (179973)
-- -- Erkek çalışanların sayısını bulun (179973)

SELECT 
    COUNT(*)
FROM
    employees
WHERE
    gender = 'M';


-- -- b: Determine the count of female employees (120050)
-- -- Kadın çalışanların sayısını belirleyin (120050)

SELECT 
    COUNT(*)
FROM
    employees
WHERE
    gender = 'F';


-- -- c: Find the number of male and female employees by grouping:
-- -- Gruplandırarak erkek ve kadın çalışanların sayısını bulun:

SELECT 
    gender, COUNT(*)
FROM
    employees
GROUP BY gender;

-- -- d: Calculate the total number of employees in the company (300023)
-- -- Şirketteki toplam çalışan sayısını hesaplayın (300023)

SELECT 
    COUNT(*)
FROM
    employees;



-- 22.
-- -- a: Find out how many employees have unique first names (1275)
-- -- Kaç çalışanın benzersiz ilk adı olduğunu bulun (1275)


SELECT 
    COUNT(*) AS unique_first_name_count
FROM
    (SELECT 
        first_name
    FROM
        employees
    GROUP BY first_name) AS unique_names;


-- -- b: Identify the number of distinct department names (9)
-- -- Farklı bölüm adlarının sayısını belirleyin (9)

SELECT COUNT(DISTINCT dept_name) AS distinct_department_count
FROM departments;




-- 23. List the number of employees in each department
-- -- Her bölümdeki çalışan sayısını listele

SELECT 
    COUNT(*), dept_emp.dept_no
FROM
    employees
        JOIN
    dept_emp ON dept_emp.emp_no = employees.emp_no
GROUP BY dept_no;

-- 2. yol
SELECT 
    departments.dept_name, COUNT(dept_emp.emp_no) AS employee_count
FROM
    departments
        JOIN
    dept_emp ON departments.dept_no = dept_emp.dept_no
GROUP BY d.dept_name;



-- 24. List all employees hired within the last 5 years from February 20, 1990
-- -- 1990-02-20 tarihinden sonraki son 5 yıl içinde işe alınan tüm çalışanları listele

SELECT 
    first_name, last_name, hire_date
FROM
    employees
WHERE
    hire_date BETWEEN '1985-02-20' AND '1990-02-20'
ORDER BY hire_date;



-- 25. List the information (employee number, date of birth, first name, last name, gender, hire date) of
-- the employee named "Annemarie Redmiles".
-- "Annemarie Redmiles" adlı çalışanın bilgilerini (çalışan numarası, doğum tarihi, ilk adı, soyadı,
-- cinsiyet, işe alınma tarihi) listele.


SELECT 
    employees.emp_no,
    employees.birth_date,
    employees.first_name,
    employees.last_name,
    employees.gender,
    employees.hire_date
FROM
    employees
WHERE
    employees.first_name = 'Annemarie'
        AND employees.last_name = 'Redmiles';



-- 26. List all information (employee number, date of birth, first name, last name, gender, hire date,
-- salary, department, and title) for the employee named "Annemarie Redmiles".
-- -- "Annemarie Redmiles" adlı çalışanın tüm bilgilerini (çalışan numarası, doğum tarihi, ilk adı,
-- soyadı, cinsiyet, işe alınma tarihi, maaş, departman ve unvan) listele.

SELECT 
    e.emp_no,
    e.birth_date,
    e.first_name,
    e.last_name,
    e.gender,
    e.hire_date,
    s.salary,
    d.dept_name,
    t.title
FROM
    employees e
        JOIN
    salaries s ON e.emp_no = s.emp_no
        JOIN
    dept_emp de ON e.emp_no = de.emp_no
        JOIN
    departments d ON de.dept_no = d.dept_no
        JOIN
    titles t ON e.emp_no = t.emp_no
WHERE
    e.first_name = 'Annemarie'
        AND e.last_name = 'Redmiles';


-- 27. List all employees and managers in the D005 department
-- -- D005 bölümündeki tüm çalışanları ve yöneticileri listele


SELECT 
    employees.emp_no, employees.first_name, employees.last_name
FROM
    employees
        JOIN
    dept_emp ON employees.emp_no = dept_emp.emp_no
WHERE
    dept_emp.dept_no = 'd005' 
UNION SELECT 
    employees.emp_no, employees.first_name, employees.last_name
FROM
    dept_manager
        JOIN
    employees ON employees.emp_no = dept_manager.emp_no
WHERE
    dept_manager.dept_no = 'd005';



-- 28. List all employees hired after '1994-02-24' and earning more than 50,000
-- -- '1994-02-24' tarihinden sonra işe alınan ve 50.000'den fazla kazanan tüm çalışanları listele

SELECT 
    e.emp_no, e.first_name, e.last_name, e.hire_date, s.salary
FROM
    employees e
        JOIN
    salaries s ON e.emp_no = s.emp_no
WHERE
    e.hire_date > '1994-02-24'
        AND s.salary > 50000;



-- 29. List all employees working in the "Sales" department with the title "Manager"
-- -- "Satış" bölümünde "Yönetici" unvanıyla çalışan tüm çalışanları listele

SELECT e.emp_no, e.first_name, e.last_name, d.dept_name, t.title
FROM employees e
JOIN dept_emp de ON e.emp_no = de.emp_no
JOIN departments d ON de.dept_no = d.dept_no
JOIN titles t ON e.emp_no = t.emp_no
WHERE d.dept_name = 'Sales'
AND t.title = 'Manager';

-- 30. Find the department where employee with '10102' has worked the longest
-- -- '10102' numaralı çalışanın en uzun süre çalıştığı departmanı bul

SELECT d.dept_name, (de.to_date - de.from_date) AS duration
FROM dept_emp de
JOIN departments d ON de.dept_no = d.dept_no
WHERE de.emp_no = '10102'
ORDER BY duration DESC
LIMIT 1;


-- 31. Find the highest paid employee in department D004
-- -- D004 bölümünde en yüksek maaş alan çalışanı bulun

SELECT e.emp_no, e.first_name, e.last_name, s.salary
FROM employees e
JOIN salaries s ON e.emp_no = s.emp_no
JOIN dept_emp de ON e.emp_no = de.emp_no
WHERE de.dept_no = 'D004'
ORDER BY s.salary DESC
LIMIT 1;




-- 32. Find the entire position history for employee with emp. no '10102'
-- -- '10102' numaralı çalışanın tüm pozisyon geçmişini bulun

SELECT 
    departments.dept_name,
    dept_emp.from_date,
    dept_emp.to_date,
    'Employee' AS position
FROM
    dept_emp
        JOIN
    departments ON dept_emp.dept_no = departments.dept_no
WHERE
    dept_emp.emp_no = '10102' 
UNION ALL SELECT 
    departments.dept_name,
    dept_manager.from_date,
    dept_manager.to_date,
    'Manager' AS position
FROM
    dept_manager
        JOIN
    departments ON dept_manager.dept_no = departments.dept_no
WHERE
    dept_manager.emp_no = '10102'
ORDER BY from_date;




-- 33. Finding the average "employee age"
-- -- Ortalama "çalışan yaşını" bulma

SELECT AVG(YEAR(CURDATE()) - YEAR(birth_date)) AS average_age
FROM employees;




-- 34. Finding the number of employees per department
-- -- Bölüm başına çalışan sayısını bulma

SELECT 
    d.dept_name, COUNT(de.emp_no) AS employee_count
FROM
    departments d
        JOIN
    dept_emp de ON d.dept_no = de.dept_no
GROUP BY d.dept_name;

-- 35. Finding the managerial history of employee with ID (emp. no) 110022
-- -- 110022 numaralı çalışanın yönetim geçmişini bulma

SELECT 
    d.dept_name, dm.from_date, dm.to_date
FROM
    dept_manager dm
        JOIN
    departments d ON dm.dept_no = d.dept_no
WHERE
    dm.emp_no = '110022';

-- 36. Find the duration of employment for each employee
-- -- Her çalışanın istihdam süresini bulma


SELECT 
    e.emp_no,
    e.first_name,
    e.last_name,
    (DATEDIFF(CURDATE(), e.hire_date)) AS duration_in_days
FROM
    employees e;


-- 37. Find the latest title information for each employee
-- -- Her çalışanın en son unvan bilgisini bulma

SELECT 
    t.emp_no, t.title, MAX(t.to_date) AS latest_title_date
FROM
    titles t
GROUP BY t.emp_no;

-- 38. Find the first and last names of managers in department 'D005'
-- -- 'D005' bölümünde yöneticilerin adını ve soyadını bulma

SELECT 
    e.first_name, e.last_name
FROM
    employees e
        JOIN
    dept_manager dm ON e.emp_no = dm.emp_no
WHERE
    dm.dept_no = 'D005';

-- 39. Sort employees by their birth dates
-- -- Çalışanları doğum tarihlerine göre sıralama

SELECT 
    emp_no, first_name, last_name, birth_date
FROM
    employees
ORDER BY birth_date;


-- 40. List employees hired in April 1992
-- -- Nisan 1992'de işe alınan çalışanları listeleme

SELECT 
    emp_no, first_name, last_name, hire_date
FROM
    employees
WHERE
    hire_date BETWEEN '1992-04-01' AND '1992-04-30';

-- 41. Find all departments that employee '10102' has worked in.
-- -- '10102' numaralı çalışanın çalıştığı tüm bölümleri bulma.

SELECT 
    d.dept_name
FROM
    departments d
        JOIN
    dept_emp de ON d.dept_no = de.dept_no
WHERE
    de.emp_no = '10102';
